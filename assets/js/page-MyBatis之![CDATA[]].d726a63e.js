(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{759:function(s,a,e){"use strict";e.r(a);var t=e(1),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"mybatis-之-cdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-之-cdata"}},[s._v("#")]),s._v(" MyBatis 之 "),e("code",[s._v("<![CDATA[ ]]>")])]),s._v(" "),e("p",[s._v("在 MyBatis 中，我们都知道 mapper.xml 是使用了 XML 的语法，所以会出现有一些特殊的字符不能直接被转义，在编译解析时，会导致编译出错。例如：'<' 和 '&' 字符在 XML 元素中都是非法的\n")]),s._v(" "),e("h2",{attrs:{id:"疑问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#疑问"}},[s._v("#")]),s._v(" 疑问？")]),s._v(" "),e("ol",[e("li",[s._v(" 是什么东东？\n")]),s._v(" "),e("li",[s._v("在 MyBatis 中使用 "),s._v(" 不能解决的问题？")]),s._v(" "),e("li",[s._v("如何解决问题？")])]),s._v(" "),e("h2",{attrs:{id:"是什么东东"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是什么东东"}},[s._v("#")]),s._v(" "),s._v(" 是什么东东？")]),s._v(" "),e("p",[s._v('术语 CDATA 是不应该由 XML 解析器解析的文本数据。\n像 "<" 和 "&" 字符在 XML 元素中都是非法的。\n"<" 会产生错误，因为解析器会把该字符解释为新元素的开始。\n"&" 会产生错误，因为解析器会把该字符解释为字符实体的开始。\n某些文本，MyBatis，判断大小："SELECT * FROM USER U WHERE U.AGE < 20 "。为了避免错误，可以将脚本代码定义为 CDATA。\n'),e("font",{staticStyle:{color:"red"}},[s._v("CDATA 部分中的所有内容都会被解析器忽略。")]),s._v('\nCDATA 部分由 "'),s._v('" 结束：')],1),s._v(" "),e("div",{staticClass:"language-xml-dtd line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<SELECT id="queryUser" resultType="com.myk.entity.User">\n<![CDATA[\nSELECT * FROM USER U WHERE U.AGE < 20 \n]]>\n</SELECT>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("在上面的实例中，解析器会忽略 CDATA 部分中的所有内容。\n那么 "),s._v(" 部分中的内容将被视为是一个文本数据。")]),s._v(" "),e("p",[s._v('关于 CDATA 部分的注释：\nCDATA 部分不能包含字符串 "]]>"。也不允许嵌套的 CDATA 部分。\n标记 CDATA 部分结尾的 "]]>" 不能包含空格或换行。')]),s._v(" "),e("h2",{attrs:{id:"在-mybatis-中使用-不能解决的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-mybatis-中使用-不能解决的问题"}},[s._v("#")]),s._v(" 在 MyBatis 中使用 "),s._v(" 不能解决的问题")]),s._v(" "),e("p",[s._v("根据上边的解释，应该都知道使用 "),s._v(" 会有怎样的效果，那为什么还有不能解决的问题呢？\n都知道 MyBatis 中有很多的运算标签，如 "),e("code",[s._v("<if></if>")]),s._v("、"),e("code",[s._v("<foreach></foreach>")]),s._v("、"),e("code",[s._v("<where></where>")]),s._v("、"),e("code",[s._v("<choose></choose>")]),s._v(" 等标签。这里既然提到了这些标签，那么就说明  "),s._v(" 与这些标签一起使用，在执行的时候将会出现问题。，这是为什么呢？\n因为在 MyBatis 中，解析器解析到这些标签的时候，会单独进行运算封装。而当这些标签被  "),s._v(" 标记为文本内容之后，不会被解析器解析，而是将  "),s._v("  标记的内容当成是一条完整的 SQL 语句，进行执行操作，而这条被标记的 SQL 很明显就是有语法问题的，所以执行就是抛异常。如：")]),s._v(" "),e("div",{staticClass:"language-xml-dtd line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<SELECT id="queryUser" resultType="com.myk.entity.User">\n<![CDATA[\nSELECT * FROM USER U WHERE U.AGE &lt; 20 \nAND\nU.userId IN\n<foreach collection="userIdList" item="userId" open="(" close=")" separator=",">\n#{userId}\n</foreach>   \n]]>\n</SELECT>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("以上代码会出现两个问题：")]),s._v(" "),e("ol",[e("li",[s._v("SQL 中的 "),e("code",[s._v("&lt;")]),s._v(" 不会被转义为 '<' 符号")]),s._v(" "),e("li",[s._v("SQl 中的 "),e("code",[s._v("<foreach></foreach>")]),s._v(" 标签不会被解析执行，而是当成文本内容")])]),s._v(" "),e("p",[s._v("SQL 被解析之后是这样的：\n"),e("code",[s._v('SELECT * FROM USER U WHERE U.AGE &lt; 20 AND U.userId IN <foreach collection="userIdList" item="userId" open="(" close=")" separator=","> #{userId} </foreach>')])]),s._v(" "),e("h2",{attrs:{id:"解决-mybatis-中使用-的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决-mybatis-中使用-的问题"}},[s._v("#")]),s._v(" 解决 MyBatis 中使用 "),s._v(" 的问题")]),s._v(" "),e("p",[s._v("目前我有两种想法可以使用")]),s._v(" "),e("h3",{attrs:{id:"精准定位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#精准定位"}},[s._v("#")]),s._v(" 精准定位")]),s._v(" "),e("p",[s._v("什么叫精准定位呢？即哪里需要，就标记哪里,最大限度的减少被 "),s._v(" 标记的范围，减少出错的可能。如：")]),s._v(" "),e("div",{staticClass:"language-xml-dtd line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<SELECT id="queryUser" resultType="com.myk.entity.User">\n<![CDATA[\nSELECT * FROM USER U WHERE U.AGE < 20 \n]]>\nAND\nU.userId IN\n<foreach collection="userIdList" item="userId" open="(" close=")" separator=",">\n#{userId}\n</foreach>   \n</SELECT>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("最后解析出来的 SQL ："),e("code",[s._v("SELECT * FROM USER U WHERE U.AGE < 20 AND userId IN （''）")])]),s._v(" "),e("h3",{attrs:{id:"sql全包裹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql全包裹"}},[s._v("#")]),s._v(" SQL全包裹")]),s._v(" "),e("p",[s._v("全包裹，顾名思义就是  "),s._v(" 标记整条 SQL ，如果必须使用这种方式，那么 SQL 中就不能出现 MyBatis 的运算标签，如：")]),s._v(" "),e("div",{staticClass:"language-xml-dtd line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<SELECT id="queryUser" resultType="com.myk.entity.User">\n<![CDATA[\nSELECT * FROM USER U WHERE U.AGE < 20 \nAND\nU.userId = #{userId}   \n]]>\n</SELECT>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("最后解析出来的 SQL ："),e("code",[s._v("SELECT * FROM USER U WHERE U.AGE < 20 AND U.userId = #{userId}")])])])}),[],!1,null,null,null);a.default=n.exports}}]);