(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{795:function(s,t,e){"use strict";e.r(t);var a=e(1),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"kubernetes-grammar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-grammar"}},[s._v("#")]),s._v(" Kubernetes grammar")]),s._v(" "),e("h2",{attrs:{id:"kubectl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubectl"}},[s._v("#")]),s._v(" kubectl")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  kubectl -h\nkubectl controls the Kubernetes cluster manager.\n\n Find "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information at: https://kubernetes.io/docs/reference/kubectl/overview/\n\nBasic Commands "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Beginner"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n  create        Create a resource from a "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" or from stdin.\n  expose        使用 replication controller, service, deployment 或者 pod 并暴露它作为一个 新的 Kubernetes\nService\n  run           在集群中运行一个指定的镜像\n  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v("           为 objects 设置一个指定的特征\n\nBasic Commands "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Intermediate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n  explain       查看资源的文档\n  get           显示一个或更多 resources\n  edit          在服务器上编辑一个资源\n  delete        Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\nDeploy Commands:\n  rollout       Manage the rollout of a resource\n  scale         Set a new size "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a Deployment, ReplicaSet or Replication Controller\n  autoscale     自动调整一个 Deployment, ReplicaSet, 或者 ReplicationController 的副本数量\n\nCluster Management Commands:\n  certificate   修改 certificate 资源.\n  cluster-info  显示集群信息\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v("           Display Resource "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CPU/Memory/Storage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" usage.\n  cordon        标记 node 为 unschedulable\n  uncordon      标记 node 为 schedulable\n  drain         Drain node "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" preparation "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" maintenance\n  taint         更新一个或者多个 node 上的 taints\n\nTroubleshooting and Debugging Commands:\n  describe      显示一个指定 resource 或者 group 的 resources 详情\n  logs          输出容器在 pod 中的日志\n  attach        Attach 到一个运行中的 container\n  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v("          在一个 container 中执行一个命令\n  port-forward  Forward one or "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" ports to a pod\n  proxy         运行一个 proxy 到 Kubernetes API server\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v("            复制 files 和 directories 到 containers 和从容器中复制 files 和 directories.\n  auth          Inspect authorization\n\nAdvanced Commands:\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("          Diff live version against would-be applied version\n  apply         通过文件名或标准输入流"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("对资源进行配置\n  patch         使用 strategic merge patch 更新一个资源的 field"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  replace       通过 filename 或者 stdin替换一个资源\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v("          Experimental: Wait "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a specific condition on one or many resources.\n  convert       在不同的 API versions 转换配置文件\n  kustomize     Build a kustomization target from a directory or a remote url.\n\nSettings Commands:\n  label         更新在这个资源上的 labels\n  annotate      更新一个资源的注解\n  completion    Output shell completion code "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the specified shell "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bash or "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nOther Commands:\n  alpha         Commands "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("features")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" alpha\n  api-resources Print the supported API resources on the server\n  api-versions  Print the supported API versions on the server, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the form of "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"group/version"')]),s._v("\n  config        修改 kubeconfig 文件\n  plugin        Provides utilities "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" interacting with plugins.\n  version       输出 client 和 server 的版本信息\n\nUsage:\n  kubectl "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("flags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl <command> --help"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information about a given command.\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl options"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a list of global command-line options "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("applies to all commands"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br")])]),e("h2",{attrs:{id:"kubectl-get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-get"}},[s._v("#")]),s._v(" kubectl get")]),s._v(" "),e("p",[s._v("help:")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubectl get -h\nDisplay one or many resources\n\n Prints a table of the "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("most")]),s._v(" important information about the specified resources. You can filter the list using a label\nselector and the --selector flag. If the desired resource "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" is namespaced you will only see results "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" your current\nnamespace unless you pass --all-namespaces.\n\n Uninitialized objects are not shown unless --include-uninitialized is passed.\n\n By specifying the output as "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'template'")]),s._v(" and providing a Go template as the value of the --template flag, you can filter\nthe attributes of the fetched resources.\n\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl api-resources"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a complete list of supported resources.\n\nExamples:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List all pods in ps output format.")]),s._v("\n  kubectl get pods\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List all pods in ps output format with more information (such as node name).")]),s._v("\n  kubectl get pods -o wide\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List a single replication controller with specified NAME in ps output format.")]),s._v("\n  kubectl get replicationcontroller web\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# List deployments in JSON output format, in the "v1" version of the "apps" API group:')]),s._v("\n  kubectl get deployments.v1.apps -o json\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List a single pod in JSON output format.")]),s._v("\n  kubectl get -o json pod web-pod-13je7\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# List a pod identified by type and name specified in "pod.yaml" in JSON output format.')]),s._v("\n  kubectl get -f pod.yaml -o json\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List resources from a directory with kustomization.yaml - e.g. dir/kustomization.yaml.")]),s._v("\n  kubectl get -k dir/\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return only the phase value of the specified pod.")]),s._v("\n  kubectl get -o template pod/web-pod-13je7 --template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(".status.phase"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List resource information in custom columns.")]),s._v("\n  kubectl get pod test-pod -o custom-columns"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("CONTAINER:.spec.containers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(".name,IMAGE:.spec.containers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(".image\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List all replication controllers and services together in ps output format.")]),s._v("\n  kubectl get rc,services\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List one or more resources by their type and names.")]),s._v("\n  kubectl get rc/web service/frontend pods/web-pod-13je7\n\nOptions:\n  -A, --all-namespaces"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If present, list the requested object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" across all namespaces. Namespace "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" current\ncontext is ignored even "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" specified with --namespace.\n      --allow-missing-template-keys"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: If true, ignore any errors "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" templates when a field or map key is missing "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\nthe template. Only applies to golang and jsonpath output formats.\n      --chunk-size"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(": Return large lists "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" chunks rather than all at once. Pass "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" to disable. This flag is beta and\nmay change "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the future.\n      --field-selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Selector "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("field query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to filter on, supports "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'=='")]),s._v(", and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!='")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. --field-selector\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("key1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1,key2"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(". The server only supports a limited number of field queries per type.\n  -f, --filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Filename, directory, or URL to files identifying the resource to get from a server.\n      --ignore-not-found"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If the requested object does not exist the "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" will "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" code "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(".\n  -k, --kustomize"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Process the kustomization directory. This flag can"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t be used together with -f or -R.\n  -L, --label-columns=[]: Accepts a comma separated list of labels that are going to be presented as columns. Names are\ncase-sensitive. You can also use multiple flag options like -L label1 -L label2...\n      --no-headers=false: When using the default or custom-column output format, don'")]),s._v("t print headers "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default print\nheaders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -o, --output"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Output format. One of:\njson"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("yaml"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("wide"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("custom-columns"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("custom-columns-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jsonpath-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nSee custom columns "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("http://kubernetes.io/docs/user-guide/kubectl-overview/"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#custom-columns], golang template")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("http://golang.org/pkg/text/template/"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pkg-overview] and jsonpath template")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("http://kubernetes.io/docs/user-guide/jsonpath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(".\n      --output-watch-events"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Output "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" event objects when --watch or --watch-only is used. Existing objects are\noutput as initial ADDED events.\n      --raw"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Raw URI to request from the server.  Uses the transport specified by the kubeconfig file.\n  -R, --recursive"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Process the directory used "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" -f, --filename recursively. Useful when you want to manage\nrelated manifests organized within the same directory.\n  -l, --selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Selector "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("label query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to filter on, supports "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'=='")]),s._v(", and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!='")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. -l "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("key1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1,key2"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --server-print"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: If true, have the server "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" the appropriate table output. Supports extension APIs and\nCRDs.\n      --show-kind"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If present, list the resource "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the requested object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n      --show-labels"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: When printing, show all labels as the last "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default hide labels "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --sort-by"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" If non-empty, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" list types using this field specification.  The field specification is expressed\nas a JSONPath expression "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{.metadata.name}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(". The field "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the API resource specified by this JSONPath expression\nmust be an integer or a string.\n      --template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Template string or path to template "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to use when -o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("go-template, -o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("go-template-file. The\ntemplate "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" is golang templates "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("http://golang.org/pkg/text/template/"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pkg-overview].")]),s._v("\n  -w, --watch"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: After listing/getting the requested object, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" changes. Uninitialized objects are excluded\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" no object name is provided.\n      --watch-only"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Watch "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" changes to the requested object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", without listing/getting first.\n\nUsage:\n  kubectl get\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("--output"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("json"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("yaml"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("wide"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("custom-columns"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("custom-columns-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jsonpath-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TYPE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(".VERSION"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(".GROUP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NAME "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" -l label"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" TYPE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(".VERSION"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(".GROUP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("/NAME "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("flags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl options"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a list of global command-line options "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("applies to all commands"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br")])]),e("p",[s._v("example:")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubectl get namespace\ndefault                Active   202d\nfluent-bit             Active   2d23h\nkube-node-lease        Active   202d\nkube-public            Active   202d\nkube-system            Active   202d\nkubernetes-dashboard   Active   46d\nlogging                Active   2d17h\ndev                    Active   48d\nsit                    Active   25d\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubectl get pods -A\ndev               podsName1        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          2d\ndev               podsName2        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          40h\nsit               podsName1        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          7d1h\nsit               podsName1        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          7d1h\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -n dev: 指定dev命名空间")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubectl get pods -n dev\nNAME                   READY   STATUS             RESTARTS   AGE\npodsName1              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          2d3h\npodsName2              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          2d3h\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("h2",{attrs:{id:"kubectl-apply"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-apply"}},[s._v("#")]),s._v(" kubectl apply")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  kubectl apply -h\nApply a configuration to a resource by filename or stdin. The resource name must be specified. This resource will be\ncreated "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" it doesn"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t exist yet. To use '")]),s._v("apply"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("', always create the resource initially with either '")]),s._v("apply"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' or '")]),s._v("create\n--save-config"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.\n\n JSON and YAML formats are accepted.\n\n Alpha Disclaimer: the --prune functionality is not yet complete. Do not use unless you are aware of what the current\nstate is. See https://issues.k8s.io/34274.\n\nExamples:\n  # Apply the configuration in pod.json to a pod.\n  kubectl apply -f ./pod.json\n  \n  # Apply resources from a directory containing kustomization.yaml - e.g. dir/kustomization.yaml.\n  kubectl apply -k dir/\n  \n  # Apply the JSON passed into stdin to a pod.\n  cat pod.json | kubectl apply -f -\n  \n  # Note: --prune is still in Alpha\n  # Apply the configuration in manifest.yaml that matches label app=nginx and delete all the other resources that are\nnot in the file and match label app=nginx.\n  kubectl apply --prune -f manifest.yaml -l app=nginx\n  \n  # Apply the configuration in manifest.yaml and delete all the other configmaps that are not in the file.\n  kubectl apply --prune -f manifest.yaml --all --prune-whitelist=core/v1/ConfigMap\n\nAvailable Commands:\n  edit-last-applied Edit latest last-applied-configuration annotations of a resource/object\n  set-last-applied  Set the last-applied-configuration annotation on a live object to match the contents of a file.\n  view-last-applied 显示最后的 resource/object 的 last-applied-configuration annotations\n\nOptions:\n      --all=false: Select all resources in the namespace of the specified resource types.\n      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in\nthe template. Only applies to golang and jsonpath output formats.\n      --cascade=true: If true, cascade the deletion of the resources managed by this resource (e.g. Pods created by a\nReplicationController).  Default true.\n      --dry-run='")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\': Must be "none", "server", or "client". If client strategy, only print the object that would be\nsent, without sending it. If server strategy, submit server-side request without persisting the resource.\n      --field-manager=\'')]),s._v("kubectl"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("': Name of the manager used to track field ownership.\n  -f, --filename=[]: that contains the configuration to apply\n      --force=false: If true, immediately remove resources from API and bypass graceful deletion. Note that immediate\ndeletion of some resources may result in inconsistency or data loss and requires confirmation.\n      --force-conflicts=false: If true, server-side apply will force the changes against conflicts.\n      --grace-period=-1: Period of time in seconds given to the resource to terminate gracefully. Ignored if negative.\nSet to 1 for immediate shutdown. Can only be set to 0 when --force is true (force deletion).\n  -k, --kustomize='")]),s._v("': Process a kustomization directory. This flag can"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t be used together with -f or -R.\n      --openapi-patch=true: If true, use openapi to calculate diff when the openapi presents and the resource can be\nfound in the openapi spec. Otherwise, fall back to use baked-in types.\n  -o, --output='")]),s._v("': Output format. One of:\njson"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("yaml"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("templatefile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jsonpath"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jsonpath-file.\n      --overwrite"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: Automatically resolve conflicts between the modified and live configuration by using values from\nthe modified configuration\n      --prune"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Automatically delete resource objects, including the uninitialized ones, that "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not appear "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the\nconfigs and are created by either apply or create --save-config. Should be used with either -l or --all.\n      --prune-whitelist"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Overwrite the default whitelist with "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("group/version/kind"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" --prune\n      --record"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Record current kubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the resource annotation. If "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" to false, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not record the\ncommand. If "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" to true, record the command. If not set, default to updating the existing annotation value only "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" one\nalready exists.\n  -R, --recursive"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Process the directory used "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" -f, --filename recursively. Useful when you want to manage\nrelated manifests organized within the same directory.\n  -l, --selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Selector "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("label query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to filter on, supports "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'=='")]),s._v(", and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!='")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. -l "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("key1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1,key2"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --server-side"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If true, apply runs "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the server instead of the client.\n      --template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Template string or path to template "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to use when -o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("go-template, -o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("go-template-file. The\ntemplate "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" is golang templates "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("http://golang.org/pkg/text/template/"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pkg-overview].")]),s._v("\n      --timeout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0s: The length of "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" before giving up on a delete, zero means determine a "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" from the\nsize of the object\n      --validate"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: If true, use a schema to validate the input before sending it\n      --wait"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If true, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" resources to be gone before returning. This waits "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" finalizers.\n\nUsage:\n  kubectl apply "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-f FILENAME "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" -k DIRECTORY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl <command> --help"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information about a given command.\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl options"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a list of global command-line options "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("applies to all commands"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br")])]),e("p",[s._v("example:")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -n dev: 指定dev命名空间")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubectl apply -f **.yaml -n dev\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"kubectl-logs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-logs"}},[s._v("#")]),s._v(" kubectl logs")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubectl logs -h\nPrint the logs "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a container "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a pod or specified resource. If the pod has only one container, the container name is\noptional.\n\nExamples:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return snapshot logs from pod nginx with only one container")]),s._v("\n  kubectl logs nginx\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return snapshot logs from pod nginx with multi containers")]),s._v("\n  kubectl logs nginx --all-containers"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return snapshot logs from all containers in pods defined by label app=nginx")]),s._v("\n  kubectl logs -lapp"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx --all-containers"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return snapshot of previous terminated ruby container logs from pod web-1")]),s._v("\n  kubectl logs -p -c ruby web-1\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Begin streaming the logs of the ruby container in pod web-1")]),s._v("\n  kubectl logs -f -c ruby web-1\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Begin streaming the logs from all containers in pods defined by label app=nginx")]),s._v("\n  kubectl logs -f -lapp"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx --all-containers"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Display only the most recent 20 lines of output in pod nginx")]),s._v("\n  kubectl logs --tail"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" nginx\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Show all logs from pod nginx written in the last hour")]),s._v("\n  kubectl logs --since"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1h nginx\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Show logs from a kubelet with an expired serving certificate")]),s._v("\n  kubectl logs --insecure-skip-tls-verify-backend nginx\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return snapshot logs from first container of a job named hello")]),s._v("\n  kubectl logs job/hello\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return snapshot logs from container nginx-1 of a deployment named nginx")]),s._v("\n  kubectl logs deployment/nginx -c nginx-1\n\nOptions:\n      --all-containers"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Get all containers"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' logs in the pod(s).\n  -c, --container='")]),s._v("': Print the logs of this container\n  -f, --follow"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Specify "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the logs should be streamed.\n      --ignore-errors"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If watching / following pod logs, allow "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" any errors that occur to be non-fatal\n      --insecure-skip-tls-verify-backend"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Skip verifying the identity of the kubelet that logs are requested from.\nIn theory, an attacker could provide invalid log content back. You might want to use this "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" your kubelet serving\ncertificates have expired.\n      --limit-bytes"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(": Maximum bytes of logs to return. Defaults to no limit.\n      --max-log-requests"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(": Specify maximum number of concurrent logs to follow when using by a selector. Defaults to "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(".\n      --pod-running-timeout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("20s: The length of "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("like 5s, 2m, or 3h, higher than zero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" at least one\npod is running\n      --prefix"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Prefix each log line with the log "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pod name and container name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -p, --previous"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If true, print the logs "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the previous instance of the container "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a pod "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" it exists.\n  -l, --selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Selector "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("label query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to filter on.\n      --since"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0s: Only "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of\nsince-time / since may be used.\n      --since-time"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Only "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" logs after a specific "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RFC3339"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(". Defaults to all logs. Only one of since-time /\nsince may be used.\n      --tail"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("-1: Lines of recent log "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to display. Defaults to -1 with no selector, showing all log lines otherwise\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a selector is provided.\n      --timestamps"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Include timestamps on each line "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the log output\n\nUsage:\n  kubectl logs "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("POD "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" TYPE/NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-c CONTAINER"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl options"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a list of global command-line options "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("applies to all commands"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br")])]),e("h2",{attrs:{id:"kubectl-replace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-replace"}},[s._v("#")]),s._v(" kubectl replace")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  kubectl replace -h\nReplace a resource by filename or stdin.\n\n JSON and YAML formats are accepted. If replacing an existing resource, the complete resource spec must be provided.\nThis can be obtained by\n\n  $ kubectl get TYPE NAME -o yaml\n\nExamples:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replace a pod using the data in pod.json.")]),s._v("\n  kubectl replace -f ./pod.json\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replace a pod based on the JSON passed into stdin.")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pod.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kubectl replace -f -\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Update a single-container pod's image version (tag) to v4")]),s._v("\n  kubectl get pod mypod -o yaml "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\(image: myimage\\):.*$/\\1:v4/'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kubectl replace -f -\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Force replace, delete and then re-create the resource")]),s._v("\n  kubectl replace --force -f ./pod.json\n\nOptions:\n      --allow-missing-template-keys"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: If true, ignore any errors "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" templates when a field or map key is missing "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\nthe template. Only applies to golang and jsonpath output formats.\n      --cascade"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: If true, cascade the deletion of the resources managed by this resource "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. Pods created by a\nReplicationController"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".  Default true.\n      --dry-run"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'none'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Must be "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"none"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"server"')]),s._v(", or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" If client strategy, only print the object that would be\nsent, without sending it. If server strategy, submit server-side request without persisting the resource.\n  -f, --filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": to use to replace the resource.\n      --force"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If true, immediately remove resources from API and bypass graceful deletion. Note that immediate\ndeletion of some resources may result "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" inconsistency or data loss and requires confirmation.\n      --grace-period"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("-1: Period of "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" seconds given to the resource to terminate gracefully. Ignored "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" negative.\nSet to "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" immediate shutdown. Can only be "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" when --force is "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("force deletion"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -k, --kustomize"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Process a kustomization directory. This flag can"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t be used together with -f or -R.\n  -o, --output='")]),s._v("': Output format. One of:\njson"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("yaml"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("templatefile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jsonpath"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jsonpath-file.\n      --raw"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Raw URI to PUT to the server.  Uses the transport specified by the kubeconfig file.\n  -R, --recursive"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Process the directory used "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" -f, --filename recursively. Useful when you want to manage\nrelated manifests organized within the same directory.\n      --save-config"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If true, the configuration of current object will be saved "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" its annotation. Otherwise, the\nannotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the future.\n      --template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Template string or path to template "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to use when -o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("go-template, -o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("go-template-file. The\ntemplate "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" is golang templates "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("http://golang.org/pkg/text/template/"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pkg-overview].")]),s._v("\n      --timeout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0s: The length of "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" before giving up on a delete, zero means determine a "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" from the\nsize of the object\n      --validate"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: If true, use a schema to validate the input before sending it\n      --wait"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If true, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" resources to be gone before returning. This waits "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" finalizers.\n\nUsage:\n  kubectl replace -f FILENAME "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl options"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a list of global command-line options "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("applies to all commands"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("h2",{attrs:{id:"kubectl-create"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-create"}},[s._v("#")]),s._v(" kubectl create")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubectl create -h\nCreate a resource from a "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" or from stdin.\n\n JSON and YAML formats are accepted.\n\nExamples:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a pod using the data in pod.json.")]),s._v("\n  kubectl create -f ./pod.json\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a pod based on the JSON passed into stdin.")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pod.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kubectl create -f -\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Edit the data in docker-registry.yaml in JSON then create the resource using the edited data.")]),s._v("\n  kubectl create -f docker-registry.yaml --edit -o json\n\nAvailable Commands:\n  clusterrole         Create a ClusterRole.\n  clusterrolebinding  为一个指定的 ClusterRole 创建一个 ClusterRoleBinding\n  configmap           从本地 file, directory 或者 literal value 创建一个 configmap\n  cronjob             Create a cronjob with the specified name.\n  deployment          创建一个指定名称的 deployment.\n  job                 Create a job with the specified name.\n  namespace           创建一个指定名称的 namespace\n  poddisruptionbudget 创建一个指定名称的 pod disruption budget.\n  priorityclass       Create a priorityclass with the specified name.\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("quota")]),s._v("               创建一个指定名称的 quota.\n  role                Create a role with single rule.\n  rolebinding         为一个指定的 Role 或者 ClusterRole创建一个 RoleBinding\n  secret              使用指定的 subcommand 创建一个 secret\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v("             使用指定的 subcommand 创建一个 service.\n  serviceaccount      创建一个指定名称的 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" account\n\nOptions:\n      --allow-missing-template-keys"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: If true, ignore any errors "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" templates when a field or map key is missing "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\nthe template. Only applies to golang and jsonpath output formats.\n      --dry-run"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'none'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Must be "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"none"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"server"')]),s._v(", or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" If client strategy, only print the object that would be\nsent, without sending it. If server strategy, submit server-side request without persisting the resource.\n      --edit"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Edit the API resource before creating\n  -f, --filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Filename, directory, or URL to files to use to create the resource\n  -k, --kustomize"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Process the kustomization directory. This flag can"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t be used together with -f or -R.\n  -o, --output='")]),s._v("': Output format. One of:\njson"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("yaml"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("go-template-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("templatefile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jsonpath"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jsonpath-file.\n      --raw"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.\n      --record"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Record current kubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the resource annotation. If "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" to false, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not record the\ncommand. If "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" to true, record the command. If not set, default to updating the existing annotation value only "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" one\nalready exists.\n  -R, --recursive"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Process the directory used "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" -f, --filename recursively. Useful when you want to manage\nrelated manifests organized within the same directory.\n      --save-config"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: If true, the configuration of current object will be saved "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" its annotation. Otherwise, the\nannotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the future.\n  -l, --selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Selector "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("label query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to filter on, supports "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'=='")]),s._v(", and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!='")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e.g. -l "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("key1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1,key2"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      --template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Template string or path to template "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to use when -o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("go-template, -o"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("go-template-file. The\ntemplate "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" is golang templates "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("http://golang.org/pkg/text/template/"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pkg-overview].")]),s._v("\n      --validate"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true: If true, use a schema to validate the input before sending it\n      --windows-line-endings"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false: Only relevant "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" --edit"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true. Defaults to the line ending native to your platform.\n\nUsage:\n  kubectl create -f FILENAME "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl <command> --help"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information about a given command.\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl options"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a list of global command-line options "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("applies to all commands"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);