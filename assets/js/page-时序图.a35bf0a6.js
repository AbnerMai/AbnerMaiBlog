(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{777:function(t,a,e){"use strict";e.r(a);var r=e(1),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"时序图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#时序图"}},[t._v("#")]),t._v(" 时序图")]),t._v(" "),e("h2",{attrs:{id:"描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),e("p",[t._v("时序图是一种UML交互图，通过描述对象发送消息的时间顺序来表达多个对象之间的动态协作。")]),t._v(" "),e("h2",{attrs:{id:"元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素"}},[t._v("#")]),t._v(" 元素")]),t._v(" "),e("p",[t._v("时序图中包括如下元素：角色、对象、生命线、控制焦点和消息。")]),t._v(" "),e("h3",{attrs:{id:"角色-actor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角色-actor"}},[t._v("#")]),t._v(" 角色（Actor）")]),t._v(" "),e("p",[t._v("描述： 系统角色，可以是人或者其他系统，子系统。")]),t._v(" "),e("h3",{attrs:{id:"对象-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象-object"}},[t._v("#")]),t._v(" 对象（Object）")]),t._v(" "),e("p",[t._v("描述：对象代表时序图中的对象再交互中扮演的角色，位于时序图顶部，对象代表类角色。")]),t._v(" "),e("p",[t._v("对象一般包含三种命名方式：")]),t._v(" "),e("blockquote",[e("ol",[e("li",[t._v("包含对象名和类名")]),t._v(" "),e("li",[t._v("只显示类名不显示对象名，即为一个匿名对象")]),t._v(" "),e("li",[t._v("只显示对象名不显示类名")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/AbnerMai/AbnerMaiBlog/master/images/blogImages/202109031053699.png",alt:"image-20210903105303218"}})]),t._v(" "),e("h3",{attrs:{id:"生命线-lifeline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命线-lifeline"}},[t._v("#")]),t._v(" 生命线（LifeLine）")]),t._v(" "),e("p",[t._v("生命线代表时序图中的对象在一段时期内的存在。时序图中每个对象和底部中心都有一条垂直的虚线，这就是对象的生命线，对象见的消息存在于两条虚线间。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/AbnerMai/AbnerMaiBlog/master/images/blogImages/202109031054703.png",alt:"image-20210903105424436"}})]),t._v(" "),e("h3",{attrs:{id:"控制焦点-activation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制焦点-activation"}},[t._v("#")]),t._v(" 控制焦点（Activation）")]),t._v(" "),e("p",[t._v("控制焦点代表时序图中的对象执行一项操作的时间，即在生命线（LifeLine）上存在的矩形框。可以理解为一个方法（函数）的生命周期。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/AbnerMai/AbnerMaiBlog/master/images/blogImages/202109031058886.png",alt:"image-20210903105856373"}})]),t._v(" "),e("h3",{attrs:{id:"消息-message"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息-message"}},[t._v("#")]),t._v(" 消息（Message）")]),t._v(" "),e("p",[t._v("消息是定义交互和写作中交换信息的类，用于实体间的通信内容建模。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/AbnerMai/AbnerMaiBlog/master/images/blogImages/202109031104779.png",alt:"image-20210903110421193"}})]),t._v(" "),e("h3",{attrs:{id:"自关联消息-self-message"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自关联消息-self-message"}},[t._v("#")]),t._v(" 自关联消息（Self Message）")]),t._v(" "),e("p",[t._v("表示自身的调用")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/AbnerMai/AbnerMaiBlog/master/images/blogImages/202109031107721.png",alt:"image-20210903110753637"}})]),t._v(" "),e("h3",{attrs:{id:"combined-fragment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#combined-fragment"}},[t._v("#")]),t._v(" Combined Fragment")]),t._v(" "),e("p",[t._v("分支节点")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/AbnerMai/AbnerMaiBlog/master/images/blogImages/202109031116090.png",alt:"image-20210903111631987"}})]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v('Alternative fragment(denoted "'),e("b",[t._v("alt")]),t._v('")与 '),e("b",[t._v("if...then...else对")]),t._v(" 应")]),t._v(" "),e("li",[t._v('Option Fragment(denoted "'),e("b",[t._v("opt")]),t._v('")与 '),e("b",[t._v("Switch")]),t._v(" 对应")]),t._v(" "),e("li",[t._v('Parallel Fragment(denoted "'),e("b",[t._v("par")]),t._v('")表示同时发生')]),t._v(" "),e("li",[t._v('Loop fragment(denoted "'),e("b",[t._v("loop")]),t._v('")与 '),e("b",[t._v("for")]),t._v(" 或者"),e("b",[t._v("Foreach")]),t._v(" 对应")])])]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("通过时序图可以直观的映射执行顺序，更直观的显示操作流程。")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("p",[t._v("- "),e("a",{attrs:{href:"https://www.cnblogs.com/ywqu/archive/2009/12/22/1629426.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("UML建模之时序图（Sequence Diagram)"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);